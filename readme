设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。
使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。

5种创建型模式：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
7种结构型模式：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
11种行为型模式：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

Factory Method：使一个类的实例化延迟到其子类。多个工厂方法模式、静态工厂方法模式。
Abstract Factory：
Singleton
Builder
Prototype

Adapter
Decorator
Proxy
Facade
Bridge
Composite
Flyweight

Strategy
Template Method
Observer
Iterator
Chain of Responsibility
Command
Memento
State
Visitor
Mediator
Interpreter